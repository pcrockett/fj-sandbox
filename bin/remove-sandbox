#!/usr/bin/env bash

# This script is based on the template here:
#
#     https://gist.github.com/pcrockett/8e04641f8473081c3a93de744873f787
#
# Useful links when writing a script:
#
# Shellcheck: https://github.com/koalaman/shellcheck
# vscode-shellcheck: https://github.com/timonwong/vscode-shellcheck
# https://blog.yossarian.net/2020/01/23/Anybody-can-write-good-bash-with-a-little-effort
#

# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

[[ "${BASH_VERSINFO[0]}" -lt 4 ]] && echo "Bash >= 4 required" && exit 1

readonly SCRIPT_NAME=$(basename "$0")
readonly SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
readonly REPO_DIR=$(dirname "$SCRIPT_DIR")

function panic() {
    >&2 echo "Fatal: $*"
    exit 1
}

function is_set() {
    # Use this like so:
    #
    #     is_set "${VAR_NAME+x}" || show_usage_and_exit
    #
    # https://stackoverflow.com/a/13864829

    test ! -z "$1"
}

function show_usage() {
    printf "Usage: %s [OPTION...] [SANDBOX_NAME]\n" "${SCRIPT_NAME}" >&2
    printf "  -h, --help\t\tShow this help message then exit\n" >&2
}

function show_usage_and_exit() {
    show_usage
    exit 1
}

function parse_commandline() {

    while [ "$#" -gt "0" ]; do
        local consume=1

        case "$1" in
            -h|-\?|--help)
                ARG_HELP="true"
            ;;
            -*)
                echo "Unrecognized argument: ${1}"
                show_usage_and_exit
            ;;
            *)
                if is_set "${ARG_SANDBOX_NAME+x}"; then
                    echo "Unrecognized argument: ${1}"
                    show_usage_and_exit
                else
                    ARG_SANDBOX_NAME="${1}"
                fi
            ;;
        esac

        shift ${consume}
    done
}

parse_commandline "$@"

if is_set "${ARG_HELP+x}"; then
    show_usage_and_exit
fi;

is_set "${ARG_SANDBOX_NAME+x}" || panic "Sandbox name expected."
readonly SANDBOX_NAME="$ARG_SANDBOX_NAME"

readonly DEFAULT_CONFIG="$REPO_DIR/default-config.sh"
# shellcheck source=/dev/null
. "$DEFAULT_CONFIG"

readonly USER_CONFIG="$REPO_DIR/user-config.sh"
if [ -e "$USER_CONFIG" ]; then
    # shellcheck source=/dev/null
    . "$USER_CONFIG"
fi

if [ -d "$FJSB_SANDBOX_ROOT" ]; then
    rm -rf "${FJSB_SANDBOX_ROOT:?}/$SANDBOX_NAME" || true
fi

readonly FJ_CONFIG=~/.config/firejail
if [ -d "$FJ_CONFIG" ]; then
    rm "$FJ_CONFIG/$SANDBOX_NAME.profile" || true
fi

readonly BIN_DIR=~/.local/bin
if [ -d "$BIN_DIR" ]; then
    rm "$BIN_DIR/start-$SANDBOX_NAME" || true
fi

readonly CONFIG_DIR="$REPO_DIR/config"
if [ -d "$CONFIG_DIR" ]; then
    rm "$CONFIG_DIR/$SANDBOX_NAME.profile" || true
    rm "$CONFIG_DIR/start-$SANDBOX_NAME" || true
fi

readonly HOOK_DIR="$REPO_DIR/hooks"
if [ -f "$HOOK_DIR/post-destroy.sh" ]; then

    FJSB_SANDBOX_NAME="$SANDBOX_NAME" \
        "$HOOK_DIR/post-destroy.sh"

fi

readonly PLUGINS_FILE="$REPO_DIR/plugins.txt"
if [ -f "$PLUGINS_FILE" ]; then

    # https://stackoverflow.com/a/1521498
    tac "$PLUGINS_FILE" | while IFS= read -r plugin_dir
    do

        post_destroy_hook="$plugin_dir/hooks/post-destroy.sh"
        if [ -e "$post_destroy_hook" ]; then
            FJSB_SANDBOX_NAME="$SANDBOX_NAME" \
                "$post_destroy_hook"
        fi

    done

fi
