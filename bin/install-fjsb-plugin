#!/usr/bin/env bash

# This script is based on the template here:
#
#     https://gist.github.com/pcrockett/8e04641f8473081c3a93de744873f787
#
# It was copy/pasted here into this file and then modified extensively.
#
# Useful links when writing a script:
#
# Shellcheck: https://github.com/koalaman/shellcheck
# vscode-shellcheck: https://github.com/timonwong/vscode-shellcheck
# https://blog.yossarian.net/2020/01/23/Anybody-can-write-good-bash-with-a-little-effort
#

# https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

[[ "${BASH_VERSINFO[0]}" -lt 4 ]] && echo "Bash >= 4 required" && exit 1

readonly SCRIPT_NAME=$(basename "$0")
readonly SCRIPT_DIR=$(dirname "$(readlink -f "$0")")
readonly REPO_DIR=$(dirname "$SCRIPT_DIR")
readonly PLUGINS_FILE="$REPO_DIR/plugins.txt"

function panic {
    >&2 echo "Fatal: $*"
    exit 1
}

function show_usage() {
    printf "Usage: %s [OPTION...] [PLUGIN_DIR]\n" "${SCRIPT_NAME}" >&2
    printf "  -h, --help\t\tShow this help message then exit\n" >&2
}

function show_usage_and_exit() {
    show_usage
    exit 1
}

function is_set() {
    test ! -z "$1"
}

function parse_commandline() {

    while [ "$#" -gt "0" ]; do
        local consume=1

        case "$1" in
            -h|-\?|--help)
                ARG_HELP="true"
            ;;
            -*)
                echo "Unrecognized argument: ${1}"
                show_usage_and_exit
            ;;
            *)
                if is_set "${ARG_PLUGIN_DIR+x}"; then
                    echo "Unrecognized argument: ${1}"
                    show_usage_and_exit
                else
                    ARG_PLUGIN_DIR="${1}"
                fi
            ;;
        esac

        shift ${consume}
    done
}

parse_commandline "$@"

if is_set "${ARG_HELP+x}"; then
    show_usage_and_exit
fi;

is_set "${ARG_PLUGIN_DIR+x}" || show_usage_and_exit

readonly PLUGIN_DIR="$(readlink -f "$ARG_PLUGIN_DIR")"
if [ ! -d "$PLUGIN_DIR" ]; then
    panic "$PLUGIN_DIR does not exist."
fi

readonly INSTALL_SCRIPT="$PLUGIN_DIR/install.sh"
if [ -e "$INSTALL_SCRIPT" ]; then
    "$INSTALL_SCRIPT"
fi

echo "$PLUGIN_DIR" >> "$PLUGINS_FILE"
